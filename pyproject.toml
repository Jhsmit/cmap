# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://peps.python.org/pep-0621/
[project]
name = "cmap"
description = "Scientific colormaps for python, without dependencies"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "BSD 3-Clause License" }
authors = [{ email = "talley.lambert@gmail.com" }, { name = "Talley Lambert" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["version"]
dependencies = ["numpy"]

# [project.license-files]
# globs = ["LICENSE/*"]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = ["pytest>=6.0", "pytest-cov"]
thirdparty = [
    "colour",
    "matplotlib",
    "napari",
    "plotly",
    "pydantic",
    "pygfx",
    "pyqt5",
    "pytest-qt",
    "rich",
    "vispy",
    "bokeh",
]
dev = [
    "black",
    "ipython",
    "mypy",
    "pdbpp",
    "pre-commit",
    "pytest-cov",
    "pytest",
    "rich",
    "ruff",
]


[project.urls]
homepage = "https://github.com/tlambert03/cmap"
repository = "https://github.com/tlambert03/cmap"


# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# https://hatch.pypa.io/latest/config/build/#file-selection
[tool.hatch.build.targets.sdist]
include = ["/src", "/tests"]


# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
target-version = "py38"
extend-select = [
    "E",  # style errors
    "F",  # flakes
    "D",  # pydocstyle
    "I",  # isort
    "UP", # pyupgrade
    # "N",  # pep8-naming
    "S",    # bandit
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
]
extend-ignore = [
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D", "S101"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-v", "--cov=cmap"]
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore:distutils Version classes are deprecated",
    "ignore:`np.bool8` is a deprecated:DeprecationWarning",

]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = ["matplotlib.*", "vispy.*", "napari.*", "pygfx"]
ignore_missing_imports = true


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
]
[tool.coverage.run]
source = ["src"]


# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".github_changelog_generator",
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
    "setup.py",
]
